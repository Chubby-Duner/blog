(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{490:function(v,_,t){"use strict";t.r(_);var i=t(14),a=Object(i.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"了解程序员企业一天生活"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#了解程序员企业一天生活"}},[v._v("#")]),v._v(" 了解程序员企业一天生活")]),v._v(" "),t("p",[v._v("朝九晚六")]),v._v(" "),t("p",[v._v("早上9晚上9一周6天")]),v._v(" "),t("p",[v._v("一天")]),v._v(" "),t("p",[v._v("自己企业有网站，需要不断维护与更新网站企业。")]),v._v(" "),t("p",[v._v("网站源码。")]),v._v(" "),t("p",[v._v("早上：")]),v._v(" "),t("ol",[t("li",[v._v("下载昨天更新代码")]),v._v(" "),t("li",[v._v("分配工作任务")]),v._v(" "),t("li",[v._v("早上做完工作任务")])]),v._v(" "),t("p",[v._v("下午：")]),v._v(" "),t("ol",[t("li",[v._v("可能没有事情干")]),v._v(" "),t("li",[v._v("马上代码更新服务上")]),v._v(" "),t("li",[v._v("5下班，代码全部更新服务")])]),v._v(" "),t("p",[v._v("去中心化思想，分布式。")]),v._v(" "),t("h2",{attrs:{id:"什么是git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是git"}},[v._v("#")]),v._v(" 什么是Git?")]),v._v(" "),t("ul",[t("li",[v._v("Git是一款源代码管理工具(版本控制工具)\n"),t("ul",[t("li",[v._v("我们写的代码需要使用Git进行管理。")])])]),v._v(" "),t("li",[v._v("源代码有必要管理起吗？")]),v._v(" "),t("li",[v._v("svn,vss,vcs.... git")]),v._v(" "),t("li",[v._v("有必要，因为人工的去处理不同的版本，做相应备份会很麻烦。")]),v._v(" "),t("li",[v._v("Git是linux之父当年为了维护linux---Linus之前也是手动维护合并把文件发给Linus")]),v._v(" "),t("li",[v._v("Linus自己写了一个版本管理的工具(Git)")])]),v._v(" "),t("p",[t("img",{attrs:{src:"img/1352126739_7909.jpg",alt:""}})]),v._v(" "),t("blockquote",[t("p",[v._v("网站")]),v._v(" "),t("p",[v._v("https://git-scm.com/")]),v._v(" "),t("p",[v._v("https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000")])]),v._v(" "),t("h2",{attrs:{id:"初始化git仓储-仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化git仓储-仓库"}},[v._v("#")]),v._v(" 初始化Git仓储/(仓库)")]),v._v(" "),t("ul",[t("li",[v._v("这个仓库会存放，git对我们项目代码进行备份的文件")]),v._v(" "),t("li",[v._v("在项目目录右键打开 git bash")]),v._v(" "),t("li",[v._v("命令: "),t("code",[v._v("git init")]),v._v(" "),t("img",{attrs:{src:"img/git-process.png",alt:""}})])]),v._v(" "),t("h2",{attrs:{id:"自报家门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自报家门"}},[v._v("#")]),v._v(" 自报家门")]),v._v(" "),t("ul",[t("li",[v._v("就是在git中设置当前使用的用户是谁")]),v._v(" "),t("li",[v._v("每一次备份都会把当前备份者的信息存储起来")]),v._v(" "),t("li",[v._v("命令:\n"),t("ul",[t("li",[v._v("配置用户名:"),t("code",[v._v('git config --global user.name "xxx"')])]),v._v(" "),t("li",[v._v("配置邮箱:  "),t("code",[v._v('git config --global user.email "xxx"')])])])])]),v._v(" "),t("h2",{attrs:{id:"把大象放到冰箱要几步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把大象放到冰箱要几步"}},[v._v("#")]),v._v(" 把大象放到冰箱要几步")]),v._v(" "),t("ol",[t("li",[v._v("打开冰箱门")]),v._v(" "),t("li",[v._v("放大象")]),v._v(" "),t("li",[v._v("关上冰箱")])]),v._v(" "),t("h2",{attrs:{id:"把代码存储到-git仓储中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把代码存储到-git仓储中"}},[v._v("#")]),v._v(" 把代码存储到.git仓储中")]),v._v(" "),t("ul",[t("li",[v._v("1.把代码放到仓储的门口\n"),t("ul",[t("li",[t("code",[v._v("git add ./readme.md")]),v._v(" 所指定的文件放到大门口")]),v._v(" "),t("li",[t("code",[v._v("git add ./")]),v._v(" 把所有的修改的文件添加到大门口")])])]),v._v(" "),t("li",[v._v("2.把仓储门口的代码放到里面的房间中去\n"),t("ul",[t("li",[t("code",[v._v('git commit -m "这是对这次添加的东西的说明"')])])])])]),v._v(" "),t("h2",{attrs:{id:"可以一次性把我们修改的代码放到房间里-版本库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以一次性把我们修改的代码放到房间里-版本库"}},[v._v("#")]),v._v(" 可以一次性把我们修改的代码放到房间里(版本库)")]),v._v(" "),t("ul",[t("li",[t("code",[v._v('git commit --all -m "一些说明"')]),v._v(" "),t("ul",[t("li",[v._v("--all 表示是把所有修改的文件提交到版本库")])])])]),v._v(" "),t("h2",{attrs:{id:"查看当前的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看当前的状态"}},[v._v("#")]),v._v(" 查看当前的状态")]),v._v(" "),t("ul",[t("li",[v._v("可以用来查看当前代码有没有被放到仓储中去")]),v._v(" "),t("li",[v._v("命令: "),t("code",[v._v("git status")])])]),v._v(" "),t("h2",{attrs:{id:"git中的忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git中的忽略文件"}},[v._v("#")]),v._v(" git中的忽略文件")]),v._v(" "),t("ul",[t("li",[v._v(".gitignore,在这个文件中可以设置要被忽略的文件或者目录。")]),v._v(" "),t("li",[v._v("被忽略的文件不会被提交仓储里去.")]),v._v(" "),t("li",[v._v("在.gitignore中可以书写要被忽略的文件的路径，以/开头，\n一行写一个路径，这些路径所对应的文件都会被忽略，\n不会被提交到仓储中\n"),t("ul",[t("li",[v._v("写法\n"),t("ul",[t("li",[t("code",[v._v("/.idea")]),v._v(" 会忽略.idea文件")]),v._v(" "),t("li",[t("code",[v._v("/js")]),v._v("      会忽略js目录里的所有文件")]),v._v(" "),t("li",[t("code",[v._v("/js/*.js")]),v._v(" 会忽略js目录下所有js文件")])])])])])]),v._v(" "),t("h2",{attrs:{id:"查看日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[v._v("#")]),v._v(" 查看日志")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git log")]),v._v(" 查看历史提交的日志")]),v._v(" "),t("li",[t("code",[v._v("git log --oneline")]),v._v(" 可以看到简洁版的日志")])]),v._v(" "),t("h2",{attrs:{id:"回退到指定的版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回退到指定的版本"}},[v._v("#")]),v._v(" 回退到指定的版本")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("git reset --hard Head~0")])]),v._v(" "),t("ul",[t("li",[v._v("表示回退到上一次代码提交时的状态")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("git reset --hard Head~1")])]),v._v(" "),t("ul",[t("li",[v._v("表示回退到上上次代码提交时的状态")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("git reset --hard [版本号]")])]),v._v(" "),t("ul",[t("li",[v._v("可以通过版本号精确的回退到某一次提交时的状态")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("git reflog")])]),v._v(" "),t("ul",[t("li",[v._v("可以看到每一次切换版本的记录:可以看到所有提交的版本号")])])])]),v._v(" "),t("h2",{attrs:{id:"分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[v._v("#")]),v._v(" 分支")]),v._v(" "),t("ul",[t("li",[v._v("默认是有一个主分支master")])]),v._v(" "),t("h3",{attrs:{id:"创建分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[v._v("#")]),v._v(" 创建分支")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git branch dev")]),v._v(" "),t("ul",[t("li",[v._v("创建了一个dev分支")]),v._v(" "),t("li",[v._v("在刚创建时dev分支里的东西和master分支里的东西是一样的")])])])]),v._v(" "),t("h3",{attrs:{id:"切换分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[v._v("#")]),v._v(" 切换分支")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git checkout dev")]),v._v(" "),t("ul",[t("li",[v._v("切换到指定的分支,这里的切换到名为dev的分支\n"),t("code",[v._v("git branch")]),v._v(" 可以查看当前有哪些分支")])])])]),v._v(" "),t("h3",{attrs:{id:"合并分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[v._v("#")]),v._v(" 合并分支")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git merge dev")]),v._v(" "),t("ul",[t("li",[v._v("合并分支内容,把当前分支与指定的分支(dev),进行合并")]),v._v(" "),t("li",[v._v("当前分支指的是"),t("code",[v._v("git branch")]),v._v("命令输出的前面有*号的分支")])])]),v._v(" "),t("li",[v._v("合并时如果有冲突，需要手动去处理，处理后还需要再提交一次.")])]),v._v(" "),t("h2",{attrs:{id:"github-程序员微博"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-程序员微博"}},[v._v("#")]),v._v(" GitHub  程序员微博")]),v._v(" "),t("ul",[t("li",[v._v("https://github.com")]),v._v(" "),t("li",[v._v("不是git,只是一个网站")]),v._v(" "),t("li",[v._v("只不过这个网站提供了允许别通过git上传代码的功能")])]),v._v(" "),t("h2",{attrs:{id:"提交代码到github-当作git服务器来用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交代码到github-当作git服务器来用"}},[v._v("#")]),v._v(" 提交代码到github(当作git服务器来用)")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git push [地址] master")])])]),v._v(" "),t("ul",[t("li",[v._v("示例: "),t("code",[v._v("git push https://github.com/huoqishi/test112.git master master")])]),v._v(" "),t("li",[v._v("会把当前分支的内容上传到远程的master分支上")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git pull [地址] master")])])]),v._v(" "),t("ul",[t("li",[v._v("示例: "),t("code",[v._v("git pull https://github.com/huoqishi/test112.git master")])]),v._v(" "),t("li",[v._v("会把远程分支的数据得到:("),t("em",[v._v("注意本地-要初始一个仓储!")]),v._v(")")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git clone [地址]")])])]),v._v(" "),t("ul",[t("li",[v._v("会得到远程仓储相同的数据,如果多次执行会覆盖本地内容。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);