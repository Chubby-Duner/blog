(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{508:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("首先开发使用的是其中之一的"),a("strong",[s._v("woocommerce")]),s._v("。其实相当于是二次开发，本人也是第一次上手。所以就对其中的三个操作比较印象深刻。然后就此记录分享一哈。也算是个新手的总结吧，大佬们多多担待，有错可以直接弄我，哈哈哈。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("注：以下是基于个人的项目，可能每个人的项目不同其中的使用方式也有不同")])])]),s._v(" "),a("p",[s._v("通用api文档："),a("a",{attrs:{href:"https://developer.wordpress.org/apis/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://developer.wordpress.org/apis/"),a("OutboundLink")],1)]),s._v(" "),a("h1",{attrs:{id:"do-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-action"}},[s._v("#")]),s._v(" do_action")]),s._v(" "),a("p",[s._v("1、do_action()函数声明（定义）作用 do_action()函数是WordPress的内部函数，作用是创建一个行为钩子，它没有返回值，单纯的就是在特定的地方执行插件或者主题开发者挂载的函数，一般存在于某个特殊的节点或者事件上（比如开始加载主题模板的时候或者发布一篇文章的时候），该函数让wordpress变得更加强大，扩展性更加好。例如wp_head()函数中只有一句代码就是："),a("strong",[s._v("do_action( ‘wp_head’ )")]),s._v("，他的意思就是执行挂载到"),a("strong",[s._v("wp_head")]),s._v("这个动作钩子上的所有函数。")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// $tag是必须的，为我们创建的动作名称； ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// $arg为我们要执行的"动作"；')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("2、do_action()参数 这个函数可以包含两个或者多个变量，但是第一个"),a("code",[s._v("$tag")]),s._v("变量（动作钩子）是"),a("strong",[s._v("必须")]),s._v("的，而且这个函数不会返回值。 "),a("code",[s._v("$tag")]),s._v(" （字符串）（必须）要执行的动作的名字。 "),a("code",[s._v("$arg")]),s._v(" （混合）（可选）额外的参数，会被传到调用的函数里，可以添加无限个，"),a("strong",[s._v("比如保存文章的时候触发 save_post 动作，就可以把保存的文章的 id 穿进去，让回调函数根据文章 id 进行操作")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("应用示例：")])]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//先定义echo_meta，输出内容 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("echo_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v('\'<meta name="description" content="511遇见-不一样的遇见" />\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//然后将echo_meta挂载到wp_meta上 ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add_action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'wp_meta'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'echo_meta'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后我们去执行wp_meta ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[s._v("wp_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'wp_meta'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("do_action 的流程")])]),s._v(" "),a("p",[s._v("hooks.php 定义add_action --\x3e template-functions 定义前者的第二个参数的函数 / wc_get_template 指定页面的模板--\x3e 指定模板做事情(渲染/跳转)")]),s._v(" "),a("h1",{attrs:{id:"页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面"}},[s._v("#")]),s._v(" 页面")]),s._v(" "),a("p",[s._v("1.获得 page ID :")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cart_page_id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc_get_page_id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'cart'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("2.得到 page URL (permalink) :")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// get_permalink('页面id')")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cart_url")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc_get_page_permalink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'cart'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不存在则 return the home URL. ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("网址：参考 "),a("a",{attrs:{href:"https://www.skyverge.com/blog/get-woocommerce-page-urls/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.skyverge.com/blog/get-woocommerce-page-urls/"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("3."),a("code",[s._v("$checkout_url")])]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$woocommerce")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("cart")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get_checkout_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("$checkout_url")]),s._v("这个记得当时是用在了返回的跳转路径，就是在wordpress购物车中点击按钮"),a("strong",[s._v("跳转外部链接")]),s._v("然后"),a("strong",[s._v("重定向")]),s._v("回订单结算页面。")])]),s._v(" "),a("p",[s._v("3.获取当前页面的url :")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$current_url")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("home_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add_query_arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// （原生函数） ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$current_url")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("home_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add_query_arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$wp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// （普遍适用的方法）")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$url")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("home_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出: http://www.xxx.com")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("注意：home_url() 函数检索站点的主页url，可能会得不到想要的路径，而返回的是主页的url。")])])]),s._v(" "),a("p",[s._v("4.获取路径参数的值(已知字段)：http://xxx.com?cat=1")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("使用 "),a("strong",[s._v("$_GET")]),s._v("['cart']")])]),s._v(" "),a("li",[a("p",[s._v("使用 "),a("strong",[s._v("get_query_var")]),s._v("（'cart'）")])])]),s._v(" "),a("p",[s._v("5.is_page()函数是WordPress的页面判断函数之一，用来判断当前页面是否是页面页。")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("is_page")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc_get_page_id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'checkout'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("6.isset() 判断变量是否声明")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("isset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("7.后台地址：返回后台地址，传递参数后也可返回后台menu的地址")]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$url")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("admin_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出：http://www.xxx.com/wp-admin/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h1",{attrs:{id:"获取自定义字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取自定义字段"}},[s._v("#")]),s._v(" 获取自定义字段")]),s._v(" "),a("p",[s._v("一、the_meta() 模板标记，该标记自动列出帖子的所有自定义字段")]),s._v(" "),a("p",[s._v("二、")]),s._v(" "),a("p",[s._v("1、get_post_custom() 根据帖子ID检索帖子元字段")]),s._v(" "),a("ul",[a("li",[s._v("参数："),a("code",[s._v("$post_id")]),s._v(" ==> 默认值为全局$post的ID")])]),s._v(" "),a("p",[s._v("★ 2、get_post_meta("),a("code",[s._v("$post_id")]),s._v(", "),a("code",[s._v("$key")]),s._v(", "),a("code",[s._v("$single")]),s._v(") 检索帖子的一个或所有元数据")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("参数一： $post_id ==> POST ID")])]),s._v(" "),a("li",[a("p",[s._v('参数二： $key ==> 自定义字段 ， 默认值是 "" , 返回所有键(字段)的数据')])]),s._v(" "),a("li",[a("p",[s._v("参数三： $single ==> 是否返回单个值，未指定则无效")])])]),s._v(" "),a("p",[s._v('get_post_meta($post->ID, "description", true) ==> 获取description字段的值')]),s._v(" "),a("p",[s._v("get_post_custom_value() 检索自定义帖子字段的值")]),s._v(" "),a("blockquote",[a("p",[s._v("获取元数据: get_post_meta() / get_metadata() 如果参数字段不存在，"),a("strong",[s._v("取决于")]),s._v("get_metadata_default() 为true返回空字符串，为false返回空数组")])]),s._v(" "),a("div",{staticClass:"language-php line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add_post_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$post_id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加一个自定义栏目 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    $post_id 要添加自定义字段的文章或页面的ID值 \n    $key 自定义栏目的名称） \n    $value 自定义字段的值 \n    $unique 如果已经有相同名字的自定义字段，是否重复添加重名的自定义字段,true为不允许，false为允许 \n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("update_post_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$post_id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$meta_key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$meta_value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新和建立指定文章的自定义栏目 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    $post_id – 要更新（添加）自定义字段的文章或页面的ID值 \n    $meta_key – 自定义字段的键值（名字） \n    $meta_value – 自定义字段的值 \n    $prev_value – 批量替换时用的参数 \n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get_post_meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$post")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$single")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取指定日志的指定key的自定义字段 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    $post->ID (整数)要添加自定义栏目文章的ID \n    $key (字符串) 必须是此自定义栏目的名称 \n    $single (布尔型) (可选) 如果设为true, 则返回单个的自定义栏目的值。如果设为false, 则返回一个数组字符串型，即多个自定义栏目的值。(mixed)\n*/")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h1",{attrs:{id:"woocommerce-rest-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#woocommerce-rest-api"}},[s._v("#")]),s._v(" WooCommerce REST API")]),s._v(" "),a("p",[s._v("至于为什么要看这个呢？")]),s._v(" "),a("blockquote",[a("p",[s._v("当时有一个想法就是能不能不用原本的woocommerce，改成Vue或者React。因为原本woocommerce的主题我们是很难改的，页面布局限制很大。如果改成框架，我们直接重写掉，这样一来我们对布局样式的一些可控性好很多。\n当时翻了两天的wordpress和woocommerce文档，做了一个小总结，感觉还是这人想法行不通。因为人家就是一个插件，给你开箱即用的感觉，自然内部的一些API是没有完全开源的呃。所以总结了一小下。为了好做一个汇报工作，所以都是文字总结。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1、首页banner跳转所有产品页\n2、woocommerce REST API\n3、woocommerce 集成 vue demo \n4、WooCommerce REST API允许您使用HTTP请求创建，读取，更新和删除WooCommerce数据，因此您可以将外部应用程序与WooCommerce集成，并构建使用异步UI框架（如React）的扩展。 允许使用http请求创建，读取，更新和删除woocommer数据 \n5、woocommerce --\x3e 设置 --\x3e 高级 --\x3e REST API（允许外部应用程序查看和管理商店数据，仅限有效API密钥的应用程序授予） \n6、顾客 / 订单：创建，检索，更新，删除\n7、退款：退款API允许您创建，查看和删除单个退款。 属性：api_refund：布尔值 --\x3e 如果为true，则使用付款网关API生成退款。默认值为true。（不能控制？那恶意退款怎么办勒）\n8、退款网关（api）怎么连接起来，后台怎么看退款消息订单记录等 \n9、产品： （1）产品展示 （2）产品变化 （3） \n10、感觉api不全（购物车逻辑，api不全，那怎么跟后台的那些库存数量什么的相关联呢？） \n11、支付网关：（允许查看和更新各个付款网关）但是也不能控制呀？，得进行集成\n12、购物车（cart）：REST API 没有对cart的支持，只在内部api存在（php操作实现的）\n13、WordPress --\x3e REST API （跟woocommerce的不一样）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1、翻阅 REAT API 与后台的关联 后台新建apikey，开始 REST API 服务\n2、WordPress REAT API 和 woocommerce REST API 的区别 WordPress：内部api，并不能集成其他异步UI库（插件为WordPress服务，php操作）(v2版本) woocommerce：本身是个插件api, 是可以集成\n3、下载实例demo （接口是v1版本的，目前的是v3版本） \n 注：文章demo，并不是电商demo \n（1）运行WordPress，并使REST API 处于开启状态\n（2）修改api.js，修改成你的博客(网站)配置 「例如: 你的站点地址, 你的站点语言, 你的站点协议等等」 \n（3）修改 Wordpress 根目录下的 wp-config.php 文件 \n（4）查找：define('NONCE_SALT' \n（5）在 define('NONCE_SALT' 下方新增如下内容 define('JWT_AUTH_SECRET_KEY', 'you-64-secret-key'); #这里查看随机密钥 https://api.wordpress.org/secret-key/1.1/salt/ define('JWT_AUTH_CORS_ENABLE', true); \n（6）操作基本纯前端开发 \n\n4、登录 / 注册 api：缺少对应的接口描述，如果有能登录到wordpress网站，但是怎么管理三方社交平台的登录\n5、核心api，核心动作，钩子函数都是直接通过php操作的，ui框架不好修改和控制，绕来绕去还更麻烦，也不一定能实现 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("strong",[s._v("总结：")])]),s._v(" "),a("p",[s._v("（1）首先woocommerce的REST API是可以集成异步ui库（如react）")]),s._v(" "),a("p",[s._v("（2）REST API开启流程：后台选择woocommerce --\x3e 设置 --\x3e 高级 --\x3e REST API --\x3e 新建API Key")]),s._v(" "),a("p",[s._v("（3）下载过vue集成REST API的demo看过代码，但是功能是类似博客文章的项目，就不是电商这方面的，它项目使用的接口版本是v1的，现在最新的是v3版本 demo地址：https://github.com/crlang/VueWPress")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("步骤:\n\n1、后台设置 \n\n2、Wordpress 根目录下的 wp-config.php 文件\n\n3、前端项目也要进行相应的配置 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("感觉不足之处：")])]),s._v(" "),a("p",[s._v("（1）api接口不齐全，比如 登录/注册，购物车逻辑（存在于核心api中，php操作实现）")]),s._v(" "),a("p",[s._v("（2）有部分接口有但是感觉没写明白后期该如何操作，如下：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("1、支付接口：它描述写的是允许查看和更新​​各个付款网关，但是没有填写表单之后进行提交和支付渠道挂钩的接口 \n\n2、退款：退款API允许您创建，查看和删除单个退款。 \n接口有个属性：api_refund：布尔值 --\x3e 如果为true，则使用付款网关API生成退款。默认值为true。（但是好像没有说明具体怎么控制） \n")])])]),a("p",[s._v("（3）感觉有点作用的接口就几个：订单，退款，产品这些（但是感觉也不好操作，不能完全像用woocommerce插件操作一样）")]),s._v(" "),a("p",[s._v("（4）主要的核心api，核心动作，钩子函数都是直接通过php操作的，ui框架不好修改和控制，绕来绕去还更麻烦，也不一定能实现")])])}),[],!1,null,null,null);t.default=e.exports}}]);